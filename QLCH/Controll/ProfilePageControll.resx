<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="guna2PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAIAAAACACAYAAADDPmHLAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAD
        rwAAA68BGB6xfQAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAABrCSURBVHhe7Z0J
        eFRFtoAle0jYkxAgC2tCCAnZA4QEEpaEECCBAIGwhh1lkUU2FRAhIIrsCoqgIAIqIoqCDiqjMCIDOI6K
        4oaAoOOCzjj63rx577xz7nBvqu49nV7S3Uk6fb7v/yDddeveOqe6btWpU1W3ucXu0gDpj6xEnkXeR24g
        vyBw69/rCH1+AFmB9EPqI26ppUJGH4+cQP4HIUNby38jx5BSxF0ZaomEIg8gf0c4o9rKz8j9SBDilhoo
        fshy5DeEM6CGn68HdGjrB4nxAZDZraHyL/1Nn3PpdfyKLEZ8ELfUEMlAPkM4g0FEmC9MndAcnn4sCi6+
        lwi/ftMVfrthhD6n7/fu6ACTxjaHsJY+bH63uIikIm6pRqmHzEcM73gPj9ugeHAzOPZ8J5MGNwddd/Rg
        DBQOaKrkp78HQn2EOQg9h1ucLF7IbsRgmKKCpvCXUwmsUW3l3MkuMCC3ieFet9iBeCJucZLQ+/cFRDJE
        y1AfOPx0R9aA9uK5J6OheYi3dN9bHEK8Ebc4QWYhkgH69GoMVz5MZo0m8u2nqbDtwbYwvCgIkroEQJtI
        X0hJDFReFzs2toPrn6Sw14lc/iAZsjMbSfe/xR7E/TpwgpCjRlP82JJg+Me1dNZYKr9cSYel88OgYUNP
        0WAG6Pvli8LhZ0zP5aNC+Y0qDuLyKEfc4kiZNzOiU3KXgN/JWEvmhsE/r/NGUqFfbHJCIGcsk3RPawBf
        /7XyFoXuWzY6RH/t/yEFiFscIQC3efx+I/0YZxCOby6mQEy0v95ICvX9PSC8la/J8X98bAD87fNUNl8V
        ankG9W+qv/YHpDniFnvLbzfS53OGMAW92/EyicH5TeHNl2K11wYN904ciYWCPGMvv2RIkCFPPd9/kQYd
        Oxgq2VOIW+wpv1/vEYEK/1VvAFO88mwnySg0lt+KHUAurcrGNW2gXr2Ka+j/rx+OZdOKvHciHny864n3
        o1dBD8QtdpA85MH9u6Lf5JRvivx+8i966bwwNp2eBbNaSdcNGdiMTadn/syW0nXIHxC3VFHSkP9FlF/Y
        x2cSWeXrufl1Gvj6VLzbQ4K9lc+4tHp+/CoNmjX10q719/NQPuPSitCrgPERdEXcUgWhsbWm0Jf2x7DK
        1/PWy51FIyi9dS6dKcaXyr37d/8Qx6bTs/reSOk6hLyVbrFRGiHa7F5ggKfZXrnK/ieiJEOsu681m84U
        a5bLhjy4K5pNp4eej55TuPYfSADiFhtkGKIpc9xIy3/FJ4/KLcDLByxrOVRW3RMhXX/kGctdzKOHB0vX
        IkORWi/+SDskBemDFCNlyBSBSQgZbRBCPWBKX5VImicQTZFHLGz+Ve6/OwLSkgMVDyD3fWXovXynX7Ps
        FUC8uK+jdC2yDakVEojQHPdYZA3yIvIh8hOiL5Q1fI+cRLYj05E4xAMxJ58gSh7UofvhS8s6cVWF5gsa
        NazoBDZs4Al/v1q5a1iEOoO6ISHFDtQ4aYIUIg8iFPd2GREf2tFQiBVVsAlIM0QvFNOn9P6JbqkNWGU7
        gmllodKzkjOJS1cZ6SkNxDyoHBSxVO1Cv/CpyBnk34j4kNUJBXS8hNB4X20ZEhEtzQTslXOKtjfLFoWL
        z6U4giwdAYiMH2WYI6BWr9qEeqGrETUM2mK8vLywVxsIzYObQ4e2HSA+Nh5SElKge2p3yOyayZKenA5x
        MXHQNrItjr9DoH79+qhIqUmsjE8RisIdLHymDK84RduD7z5LVXr51MqI9yQoNIy7xhzU/9DlRf2iahFS
        5BVE/0ASfr5+ENQsCFpHtIbOMZ0hLSkNemb0hL69+kLxoGKYMnZKlSgrLYNBeYOUytE6vDX4+/ETNAJS
        VO+2hyp34VoL+f/JuE0aV7zr9aQmBVrsPNJDMQe6/EYjThUKTFiGkE9a/zDKrzoyPBIS4xKhV0YvxdAc
        ZLQpY3ijVoXJYybDwNyB0Cmqk1L5uGcU2bO9A6toW6FhHXcfld49G8G3lyzzOXDQ8+rypM6v04SMvxPR
        PwSEhoQqv27O2Hr6ZfeDCSMnsAa0J5NGT4LsHtnQuFFjw/OqPPmIfSvA9g3t2PuQK/fh1a1tDiRVoefV
        5U19L6fJvYj0AA0CG1hseJXCAYWswRwFtQq9s3pDQP0A6dkJalI5RduKvgL0y2kMz+yMsrnJ10OzjmL+
        yCjEKTIQkZp96ojlZOawRq6MsSPGsoZyNONLxkP7tu1F5cGKxeGsom1FXwHoby6drehHE0g+4nAhr9tX
        iHZj6tj16dmHNXBl5ObkwuSxk1kDOQPqeIrlGDMimFW0rTi6AjDxgtGIw4VWv2o3DQwMtOmXTwzMG8ga
        xllMLJ0oDR0pgpdTtK04ugIkxEmvsX8hDg8Zp1+/5LJNTUxljWsJQwqGsIZxJs2aVIRzeXrWU1y0nLJt
        wZEVgELL6XmF/C8gDheaiNFuSr19zrCWUjy46mP/qhIbHSsqUZni5RRuC46sALQGUcwbeQhxuLyDaDet
        yq+fGDZoGGsUZ5KXkycqUVnyxSncFhxZASjoVMwbIRe3Q4UmTrQFkjSM4oxqDTXhFUD9AB/vihW6NCN4
        9SPzK3csgYZ8ar6EvVoXWp0khqIhf0Mc/v6noZ9204iwCNao1uBsH4ApOkXLkb2L72zFKt5aaGqZXL2U
        J8UMWBLzZwl3zZYDSpFNiMOFJnq0myZ0TmCNag2KC5gxiLMpHigPB2me/trH9mkFaGXPV39JNruyyFKo
        daLYAeF5aRo4BnG4SCtls7plsUa1hv69+7MGqQ7CW8lOFWsDPJ0FhayJz4nQhlNOkY8R5aZenl6sQW1h
        4uiJrEGcDVVG0SdACzxo4wfOCNUFbSQhLihBaOwfizhFKLpGuTE5fzhj2sKY4WNYgziboQVDDa1Ai1Af
        s4s3LcEevgVafMqsB6BIK6cI9TA133/TJk1ZY9rCsMHVPxQkqD9Cs4V+fvK0MQVw2Np5o7i9rrcCQCgf
        W+MN6TrqRIrPhXyJ0MjMKRKMaDenyB3OmLZQkFvAGsTZ5PfJV56HfBv6yKL+fZvYNIO3c4s82bRra3s2
        XWXQfXN7G6awad8gp24eJVWAqnoA9dBcPWcUZ0ITU/Qs1BfISM8Qla3Qq0dDq4M3jh+Sh5eWLAAVoVdH
        VveGUh63mIY4VSiiVnsAe7YARGlxKWsUZ6I+Cw0J6e/4TvGiwhViovzh3FtdWGOZYsu6tsoCUnMrhvWc
        fSMeotuzIW20kaTTpTGiPURIUIhkQFug6eNuqd0gqUsSZKRlwJABQ6BsVJnBMI6C4gEK+xfCgL4DoKBf
        AXRP664807iScVoailsUy03Qhg8P3BdpVQy/NVC+tGSMFovq742sR6plfyDqbGgPEtwsmDWqJSTFJynB
        I56exn10PDw8oGVoS2V6edIY+78WKGi0R9ceSgXmIoi9vbwhqm2UUjHUa6hPoE9HxMXWh0N7OtrNwUP5
        0O5gsTH1uftRB/wupNqEQr61BwpqGsQatzLovdqksck98AzQSKMw336u4rzeeUqQKncvjjaRbbQhar9e
        /cDXx5dN16VzgNLM3/jUNs8hTetuWttG2SqGyx+hrWCqfT8g2qBQW0FDhuSMbIrkLsmK80i93lKoRaC1
        AXpjWgN1MBPiEtj8zUFrDdQ+waiho6BVC4MPXoP2AMrJaqSElZHD5tK5JNbg9DktIqV0tA2cblJHz6tI
        OFIjhGaclAezZiaQmlAypHqtSqNAPxic2RkWluYojB6UCSHN2H3xlImn0cNGG4xrjhGFI5Tmns2zZTCU
        DesNi6cNhbkTB0F+ryTw9zXu20vh5CVFJVqe9Hqi4Fd9Og7yJjZu5IUVx0f518RWsBw0xq9xq31pAafy
        gN7e3qyx9ZBjxddXbjr9fb1h9dQBcP3wcvjl+OoKLuyBn87vgR2rpkPTRsammloQCt4go4pG5qBpZgr4
        9KhnrHjhLYLg+a13wc8X9sIv7z8t8eVbj8K8SYPBU1dh6ZUnDlXp/zQXYs0rzULI3T4OqZG7gb6BaA9r
        SRAo/XLFa4IaBcAft94hG16rABWGuPSHrZDTLU66VqRhg4Y4JItRlo/17N5TWSpG/49qF6U029w1RElB
        D7h26nHJ6ByHti00tAY0ShArmQotPKGKyYWZWwj92jcj6UiNlv2I9uDmZgN79eglNf0e2Os+XF7GG//1
        tQYj0C/0/rml4ONtfd9BT4MAf3hs9QzDPSpj072TpDyoA0lrCrhKoEKvClqrKF6HfIN8gVDM3tvIcwhN
        rY9B2iK1RijoQCtY15SurOFVYjvKsXZFWXG88YkT61gjEBdeWg/jhmTbVBECA/xg9rgCpUXh8jZHUqxs
        TPIXcIYXYSqAU0K1nSELEa1g5gJC6L0ppj+6bhJvfOLN9awBRC4e3wzLZ42Anumx2DFjd9JWIKPnZSXC
        AwvHwuWT29m8LGXbfVOlvClyiDO6CL2ehGt+R1xmi/cSRCtcdPto1vCEvvkPC2kMPx9bxRufOLmRNYAp
        vj2zC04/uwZe3L5Yadp3lt8OR3feDWcOPQA/nnuKvcYWvjm1U+oL1PevX+lrYPzI8VraW5xDXEZoLzqt
        cJFhkazxCeqgiWlnFWfyhld5ewtrgJrAoD5pUllo1pAzPkEdQjEtsgtxGWmBaIUjdy5nfBod0C9FTGuy
        569y6hFW+TWBJ9fNkspCziDO+AQ5rcS0iFOXaztaaBKC3mlK4cgZwlUA/SxabJtQ3ugip6v2rnYk3767
        y+CXKMovYiuAfrEpkoy4lNDWKkrhOGdQdqYxombPvaW80UXe3cEqv6aw8s5RUpnIu8j1BXS+gH8iLnfs
        23FEKyR5+lTjU9Ovd7smRrWqvPOnUsMrAHU6WwTLXr+4TnGS8clDKX6PvIa4nNDJVVohVV8AVQTqE4jf
        keOn0qGfyJnHWMXXJLaumCKVjyBfB00xUwUgb6Tu+0WIy8kSRCskGb15SHNpaZXK3JJevLE5zph3z9YE
        ivp1NZSTPITtWrdTpq9139EO5C4ntAWJvqAGhmV3gZuWNP0q7+1kFV7ToFdBj2R5iGuCm4hLnvEnLQ/T
        Q83+nOFZVhn/p1fvh5Wzh0PpoCw4vnsZq3hHsH/jPBg1MBM2L5vMfm+K787sViaVuPIL0IINcpy5lMxG
        uMJqbL5zCGvkypgwoMLRQl63159azirenjy1bjZ4eFSEhK2YXcKmq4wFkwu1601Au6TSNrkuITSh8V+I
        VsBWwY0gs4s88XFo1QTWyKY4t3Ou0mqIeZCvn1O4vbh5fi+0DW8u3ZPmD668bV1HdMPdZVIeuWnR0KSB
        IYr3O8QljoI/iGgFS40Jh28OL4PFY3qLhYUjayayhjbFQ3cMkq4nKBjj+7NPskq3BzS7qL8nQUEiXHpT
        6KeLH5lfDJ/sWwRtWxpOEKPXZq0WOlFD8wDW9/OBz/YvUQxIoVzq54TFw75b0EhBvF7lr69sYJVuD44+
        fjd7z433YOVl0ptCP1O4dd5QpUynH52lb9VoC11Ltq2vsUIHN2gFmliQrhlwwahssaBw7KEp2neWUD5t
        gHQ9QeHa5H7llG4PaMZQf0/imQ3z2PSm2H7/dOl6sf/TO8Wwg2drpNYK7bWvFWbTnCKtoPNGyr/g1zdM
        076zhDc2zZCuJ+I7tmYVbi/o9RLcVF5u5e3lCZ+8bt2MJE1Di3mIemFatiyk1oq0M5hY0+8c0VMsJLy5
        eYb2naXkJFf8WujXv+fB2azC7QmFmonPPaG4N5uuMnatnSnlsXF2oVam+SPllhHJQWqt0PajWmEmDeyq
        FXTOcLkCmJ32Zbj2wjIYntcNusS0VtytnLIdwbKZI6BzVARMG5ULP/zZ+iASGkqKZV8/c7BWpr6phi3c
        OiK1VqgTWLE7mL8PfHFwqVLQ2cNk//epR2ZqSrCKs7XDEyjy9MN3SmWnEQ2V5U/bZ+s7gd8itf68f4pk
        1QqV3ikCbry4HGYOlT1i1AM2GNcSasFkkB59BVh3+0C4tH8xtGtlGAY+gNR6iUfIvakVLDyksVIRxM9s
        6QMo1PDpYI7dD8h9gOyk9tCskWFtAG2rG4q4hMxH9AWUsHYYqPGnR1kl12QeXTmN1YEAraWk8w1dSpYj
        7PEwhLWeQI13bIvbr070nkAdtIULDZ9dUnIRbZ2gyMGV43gDm+PtzaySRbi1fOaw5RpLoXUHnA6Q0wid
        fOrSQq7N3ogUIrbnnlG8gc3xlmnXL8X5D8xJAS9PTyjITrFoyEYTO10TohQHz5SSfmyaqqKPE0T2IXXu
        GPdZiKaExxeN4A1sjjceYpVMHNg0X1QyLJw6hE0nop+vJ/cvl64qLJ0hby+LVNuZfdUpExFNCVvmWh8P
        oMAsDlV5a99KUcnKr5qcMFxaYvX80Yb0tq4NrIz5kwzxANQi1jkZiWhKUJ0hNnFhD6toon/PJFHRisuY
        IohO7FmhhGnREi6a5aNNHsR0xPTSPDbPqjJrnGEiqxtS54T2rtGUsGJiLm9cSzhregbwsxPboFWowcFi
        FnIvUwXh8qwqNH+gu1+1nttbXZKEaEoYn5/GG9cSzDiD3n9pvSGSpzJS4torO35wedkDilzS3ZNOSq9z
        QuFOmhIoRIw1riVYsECUdvegXj2918X7igTU94NF04Y4NKqICJNbJDqDuM4Kxb0piiBXKEX5sgY2hwV7
        BKjQK+HBxeNhxIAe0CMlBrLSYmFsUS9lNvHqO46fV6CWRQwqReio/DordGCBpgyT28CY4/VyaZ+gmszD
        S+WAUKQcqbMyGdGUMTYvhTewJfx5N6vwmga1OmKZkb5InRXq/PyGKMqgeIFPn1nMG9gcNXifAJW396/S
        N/9XES+kTgvthKEpZUxuMm9gc7xheT+gumCWhtEp6nVeOiNa1BBFxJzYOJ03sjnOm3YIVTe0F5Faxlv8
        goQgbkHZimjKCW3aAD7eu5A3cmXU0NfAqYPlyhBTLCOyAHHLLSGfwHVEU1BCh1ZK0CdraFNUsmdgdXHx
        tS36cT/xAeKLuEUQ8odLoWPtw4KUNYCssU1Rg/YLeOfAas74/0CcclhjbZQ7EElh5CB6ZvkY3tgc1ApU
        s0+AFpFS1A+zgzj1dQYjbqlE5iJ6xUFWQjt4Z5uFoeOnq68v8PJjS5UVSkwZyPguF+fnKClDtEWlIklR
        YbBycn84/8Q805tJvFYOv5x9gjWQvaEoo9PYyaM5hOg2Jg+FoAjfAYhbrBCaLbyEcApV8PX2guiIEOiX
        Fg2FWXFQ0jtRmVWcXtQd5ozoCUumFiobOBDlC8Yoq3gtYdW8Uu06MuycCQNh6shcGD80B4b17w6FfdOV
        LelphpHCzbhnEyBffxvELTYIHX5Au4vQmJlTbk3mR4Se3SX3+3Gm0DazlxFOyTUZGurR0ji3VEECkT8j
        nIJrA3RwU5339VdFpO1lPH18YNiGxyCmb76oZIW00RNhxssnFSYdfAXK9h2BsbufhZHb90LJtiehcM0m
        aNQyzHCdntCYzlC0bqtyHTHuqUNKXpOfO/6f/I/+kb3/kMkz4PaV7AYSaxG32CCjkQpF1qunGGbJ+1/B
        wrOXoH2mvMUM0WfBPcr3ehaf/xw655vdmUujW9l0Nh8itXSCIX3/UePg2NWf4Pi1mzBh0b3672mZV0/E
        LVZIGEJDJ02RmdPmSIa468xFiEztJipaqST5966R0i0+/wV0LiiS01lAxqQ7pHyIjMl3GNJlFw6FY1d+
        VIxPUEXI6G/Y+/9rxN0fsEJeRjQFRiSnK4bUG2T+6Y+gVXyiqGio5+EBg8s3Kt/TNfGDDIswoE9xCdRv
        UHF+X3j7DpCYadx0qsfUWdq9smcvNHzfLTcfjl7+m2Z8lec/vgwtIgzOIDq71y0WSB6iKc43IBDuOHZK
        M4SeFX/6ENrFysfEeXh5QfHD26FLkWEXbsgpGgavfv0DBDasOGiSrj/y+Q1IyMiS0hJZ0++E3CX3GT5P
        ysqGl7/81mB8lfUvHNOfMUyLPmvVSV/VIbRuUFo8mjNnEWt4lV2ffQcH3r+k/IrF6+h1IP2NUHNNxicD
        6SsAfXbks+sQ343ZylWXV2xqOrx46RvJ4BzZhYbWh47Pc0slQr5yTWFNwiOVDh9neJUjV/7T+Xr67EcQ
        GhEpKlsia2ARvHL5e804XAUgyLBx6YbjWzQ6xCfAoYtfa+krY+97H4Kvv7QDKC2Pd/nVv7YK7YVDByRq
        Citcu5k1usraj65ICt99+gIEhbYQFa6QOWCwZHzCVAUgDn96DTqnGbd3j4zqCAc/+FxKa44xcxfp89mL
        uIWRbERTVOOwCGX4xhleZcelGwaF7/zjWWgiHECRkVfAdtQqqwAEtQTxXTO0NC0i28C+cxcN6czxwsUr
        0r0Q6gs0R9yiE2mNQN7S+1mjixz4Sv5Vq+w+dV5xzExbUc4anzBXAQiqBOMWLIXhM+bA/gufsmksYfgM
        eVs4ZDHiFkGCES0ayA+Nc9eZT1ijqyx9/zK8epVXuCVYUgHsxZ53P1CGp+r9EJrbcE8SCTIN0RSUOHQk
        a3QR/fvfWpxZAYiUnoYVwXVySbgpkY6XH7PrWdboIo8y739rcHYFWPb4Xu1+CEUHtUPcgtIYoRMyFOU0
        bhUOSy58yRqdhoQd8Jfk6e0N6dizV8f0tmCvCnD4k6uK78DL2wcGjJ7AplGZsXItdO2b9y9/f/9ivK9b
        bgntj6MZI620jDU+MfShR7R0xKqnn2MVbQn2qgCzyuVDJLYeO8mmk/m5Vm8AbW/ZgGgKHLHlCdb4RP69
        5ZKyF27ewSjXMuxVAcbfJR8iUb7vEJtO5LVrNx/EtG65JX9BFOVR004TPJzxCVepAAgFubgFpRlC8+WK
        8iJTurKGV3GhCvDvN7+6SX2fOi9DEU154vQrh6tUgLUHXoTQyNY08rkdqdNyH6Ipb+j6R1nDq7hCBaCZ
        S28fX/GaOj0ikGL+pr/0Fmt4FVeoAI+89raUHtmC1Fn5K6IowicgwOT4X8UVKgDNNOoCRVzyqHhLhHzh
        2vKvsIQU1ugirtIHCGklRSfTvECdlPaIpoiAoGBok55RKUFt2ouKg9bRMUosny14enlp+fgHBrJpLIGm
        icVnah/XhU0nEtBAOnqORkH+SJ0TaavYOg4dq1PnpD/CKaMuUic3jKA+AIVHSSeL1zF+RdYhtUhuu+3/
        Ad1Rb1asVZgYAAAAAElFTkSuQmCC
</value>
  </data>
</root>